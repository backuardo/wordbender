[project]
name = "wordbender"
version = "0.1.0"
description = "LLM-powered targeted wordlist generator for penetration testing"
authors = [{ name = "Ben Eisner (@backuardo)", email = "ben@beneisner.io" }]
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Security",
]
dependencies = [
    "click>=8.2.1",
    "dotenv>=0.9.9",
    "prompt-toolkit>=3.0.51",
    "requests>=2.32.3",
    "rich>=14.0.0",
    "yaspin>=3.1.0",
]

[dependency-groups]
dev = [
    "ruff>=0.8.0",
    "mypy>=1.10.0",
    "pre-commit>=4.0.0",
    "bandit>=1.8.0",
    "types-requests>=2.31.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "responses>=0.24.0",
    "pytest-timeout>=2.2.0",
]

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
explicit_package_bases = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "tests/fixtures/",
]

[tool.bandit]
skips = ["B101"] # Skip assert_used test
exclude_dirs = ["tests", ".venv", "venv"]
